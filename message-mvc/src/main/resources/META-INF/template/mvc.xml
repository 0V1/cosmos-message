<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="  
	http://www.springframework.org/schema/beans   
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
	http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-2.5.xsd">

	<context:component-scan base-package="message.mvc"/>

	<mvc:annotation-driven content-negotiation-manager="contentManager" conversion-service="conversionService">
		<mvc:argument-resolvers th:if="${argumentResolvers != null and #lists.size(argumentResolvers) > 0}">
			<bean th:attr="class=${resolver}" th:each="resolver : ${argumentResolvers}"/>
		</mvc:argument-resolvers >
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="objectMapper">
					<bean class="message.mvc.convert.CustomObjectMapper" />
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- 拦截器 -->
	<mvc:interceptors th:if="${interceptors != null and #lists.size(interceptors) > 0}">
		<bean th:attr="class=${interceptor}" th:each="interceptor : ${interceptors}"/>
		<mvc:interceptor th:if="${interceptorMappings != null and #lists.size(interceptorMappings) > 0}" th:each="interceptorMapping : ${interceptorMappings}">
			<mvc:mapping th:attr="path=${mapping}" th:if="${interceptorMapping.mappings != null and #lists.size(interceptorMapping.mappings) > 0}" th:each="mapping : ${interceptorMapping.mappings}"/>
			<mvc:exclude-mapping th:attr="path=${excludeMapping}" th:if="${interceptorMapping.excludeMappings != null and #lists.size(interceptorMapping.excludeMappings) > 0}" th:each="excludeMapping : ${interceptorMapping.excludeMappings}"/>
			<bean th:attr="class=${interceptorMapping.bean}" th:if="${interceptorMapping.bean != null}"/>
		</mvc:interceptor>
	</mvc:interceptors>

	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters" th:if="${converters != null and #lists.size(converters) > 0}">
			<set>
				<bean th:attr="class=${converter}" th:each="converter : ${converters}"/>
			</set>
		</property>
	</bean>

	<bean id="contentManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="favorPathExtension" value="true"/>
		<property name="ignoreAcceptHeader" value="true" />
		<property name="defaultContentType" value="application/json" />
		<property name="useJaf" value="false"/>
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
				<entry key="html" value="text/html" />
				<entry key="xml" value="application/xml" />
			</map>
		</property>
	</bean>

	<!-- 文件上传的必须配置 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 最大上传文件大小:1024M 单位：字节 1024*1024*1024 -->
		<property name="maxUploadSize" value="1073741824"/>
		<property name="defaultEncoding" value="UTF-8"/>
	</bean>

	<!-- 静态资源访问的支持 -->
	<mvc:default-servlet-handler />

	<!-- 支持swagger -->
	<bean class="message.mvc.swagger.CosmosSwaggerConfig" th:if="${swaggerEnable}"/>
</beans>